searchState.loadedDescShard("metadata_gen", 0, "metadata-gen\nThe <code>error</code> module contains error types for metadata …\nExtracts metadata from the content, generates keywords …\nExtracts keywords from the metadata.\nThe <code>metadata</code> module contains functions for extracting and …\nThe <code>metatags</code> module contains functions for generating meta …\nThe <code>utils</code> module contains utility functions for metadata …\nError occurred while parsing date\nError occurred while extracting metadata\nI/O error\nJSON parsing error\nCustom error types for the metadata-gen library\nError occurred due to missing required field\nError occurred while processing metadata\nTOML parsing error\nYAML parsing error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents metadata for a page or content item.\nChecks if the metadata contains the given key.\nExtracts metadata from the content string.\nReturns the argument unchanged.\nRetrieves the value associated with the given key.\nInserts a key-value pair into the metadata.\nCalls <code>U::from(self)</code>.\nConsumes the <code>Metadata</code> instance and returns the inner …\nCreates a new <code>Metadata</code> instance with the given data.\nProcesses the extracted metadata.\nHolds collections of meta tags for different platforms and …\nAdds a custom meta tag to the appropriate group.\nThe <code>apple</code> meta tags.\nReturns the argument unchanged.\nGenerates HTML meta tags based on the provided metadata.\nCalls <code>U::from(self)</code>.\nThe <code>ms</code> meta tags.\nThe <code>og</code> meta tags.\nThe primary meta tags.\nThe <code>twitter</code> meta tags.\nAsynchronously reads a file and extracts metadata from its …\nEscapes special HTML characters in a string.")